plugins {
    id 'org.springframework.boot' version '2.7.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
    id 'java'
}
subprojects {
    group = 'com.minecraft.job'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '17'
    targetCompatibility = '17'

    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.asciidoctor.jvm.convert'
    apply plugin: 'java'

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
        google()
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'

        compileOnly 'org.springframework.boot:spring-boot-starter-test'

        testImplementation 'org.springframework.boot:spring-boot-starter-test'

        compileOnly 'org.projectlombok:lombok'
        runtimeOnly 'mysql:mysql-connector-java'
        annotationProcessor 'org.projectlombok:lombok'
    }
}

project(":common") {
    dependencies {
    }

    bootJar {
        enabled = false
    }

    jar {
        enabled = true
    }

    tasks.named('test') {
        useJUnitPlatform()
    }
}

project(":integration") {
    dependencies {
        implementation(project(':common'))

        implementation 'org.springframework.boot:spring-boot-starter-mail'
        implementation 'org.thymeleaf:thymeleaf'
        implementation 'org.thymeleaf:thymeleaf-spring5'
    }

    bootJar {
        enabled = false
    }

    jar {
        enabled = true
    }

    tasks.named('test') {
        useJUnitPlatform()
    }
}

project(":api") {
    dependencies {
        implementation(project(':common'))
        implementation(project(':integration'))
        implementation 'org.flywaydb:flyway-core'
        implementation 'org.flywaydb:flyway-mysql'
        implementation 'org.springframework.boot:spring-boot-starter-security'

        testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
        testImplementation 'org.springframework.security:spring-security-test'
    }

    jar {
        enabled = false
    }

    ext {
        snippetsDir = file(getBuildDir().name + '/generated-snippets')
    }

    test {
        useJUnitPlatform()
        outputs.dir snippetsDir
    }

    asciidoctor {
        dependsOn test
        inputs.dir snippetsDir
    }

    bootJar {
        enabled = true
        dependsOn asciidoctor
    }
}

project(":admin") {
    dependencies {
        implementation(project(':common'))
        implementation(project(':integration'))
    }

    bootJar {
        enabled = true
    }

    jar {
        enabled = false
    }

    tasks.named('test') {
        useJUnitPlatform()
    }
}
